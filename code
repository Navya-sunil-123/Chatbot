from textblob import TextBlob

# Define intents and their corresponding responses based on keywords
intents = {
    "hours": {
        "keywords": ["hours", "open", "close"],    # Added comma here
        "response": "we are open from 9 AM to 5 PM, Monday to Friday."
    },    # Added comma here
    "return": {
        "keywords": ["return", "refund", "exchange"],
        "response": "You can return items within 30 days of purchase with a receipt."
    }
}

def get_response(message):
    # Convert the message to lowercase for consistent keyword matching
    message = message.lower()

    # Check each intent for matching keywords
    for intent_data in intents.values():
        if any(word in message for word in intent_data["keywords"]):
            # Return the corresponding response if a keyword is found
            return intent_data["response"]
            
    # Analyze the sentiment of the message using TextBlob
    sentiment = TextBlob(message).sentiment.polarity

    # Return a response based on the sentiment score
    if sentiment > 0:
        return "That's so great to hear!"
    elif sentiment < 0:
        return "I'm sorry to hear that, how can I help you?"
    else:
        return "I see, can you tell me more about that?"

def chat():
    # Greet the user and prompt for input
    print("Hello! How can I assist you today?")
    
    # Continuously prompt for user input until they choose to 'exit'
    while (user_message := input("You: ").strip().lower()) not in ['exit', 'quit', 'bye']:
        # Get and print the chatbot's response based on user input
        print(f"\nChatBot: {get_response(user_message)}")
    
    # Thank the user for chatting when they exit
    print("ChatBot: Thank you for chatting. Have a great day!")

if __name__ == "__main__":
    chat()  # Start the chat when the script is executed
